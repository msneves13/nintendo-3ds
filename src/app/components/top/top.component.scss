@import "../../../assets/tools/z-index";
@import "../../../assets/settings/color";
@import "../../../assets/settings/shared";
@import "../../../assets/animations/mobile";
@import "../../../assets/animations/global";
@import "../../../assets/animations/desktop";
@import "../../../assets/tools/responsiveness";

%camera {
  width: 1rem;
  height: 1rem;
  margin: auto;

  border-radius: 50%;
  background: $black-gradient;

  display: grid;
  grid-template-rows: 1fr;
  grid-template-columns: 1fr;
  grid-template-areas: "lens";

  @include respond-to("sm") {
    width: 1.5rem;
    height: 1.5rem;
  }

  & > .lens {
    width: 60%;
    height: 60%;
    margin: auto;
    border-radius: 50%;
    background: lighten($black, 30%);

    display: grid;
    grid-area: lens;
    grid-template-rows: 1fr;
    grid-template-columns: 1fr;
    grid-template-areas: "shutter";

    & > .shutter {
      width: 50%;
      height: 50%;
      margin: auto;
      grid-area: shutter;
      border-radius: 50%;
      background: linear-gradient(45deg, lighten($black, 30%) 0%, $black 100%);
    }
  }
}

.cover {
  display: grid;
  transform-style: preserve-3d;

  &.back {
    @extend %border;
    @extend %animation;

    width: 100%;
    height: 100%;
    position: absolute;
    border-bottom: unset;
    background: $primary-gradient;
    animation-name: backOpenMobile;
    border-radius: 1.25rem 1.25rem 0.25rem 0.25rem;

    grid-area: top;
    grid-template-rows: 1fr;
    grid-template-columns: 1fr 5fr 1fr;
    grid-template-areas: "left center right";

    @include respond-to("sm") {
      animation-name: backOpenDesktop;
      border-radius: 2.5rem 2.5rem 0.5rem 0.5rem;
    }

    & > .center {
      @extend %animation;

      animation-name: backSensorsVisibility;

      display: grid;
      grid-area: center;
      grid-template-columns: 1fr;
      grid-template-rows: 1fr 1fr 1fr;
      grid-template-areas: "sensors" "." ".";

      & > .sensors {
        display: grid;
        grid-area: sensors;
        grid-template-rows: 0.4fr;
        grid-template-areas: ". left right .";
        grid-template-columns: 0.5fr 1fr 1fr 0.5fr;

        & > .camera {
          @extend %camera;

          &.left {
            grid-area: left;
          }

          &.right {
            grid-area: right;
          }
        }
      }
    }

    & > .thickness {
      @extend %animation;

      width: 100%;
      height: 0.4rem;
      position: absolute;
      border-radius: 0.1563rem;
      background: $primary-gradient;
      transform: rotateX(90deg) translate3d(0, 0.2188rem, -1.25rem);

      @include respond-to("sm") {
        height: 0.8rem;
        border-radius: 0.3125rem;
        transform: rotateX(90deg) translate3d(0, 0.4375rem, -2.5rem);
      }
    }

    & > .section {
      display: grid;
      grid-area: left;
      grid-template-columns: 1fr;
      grid-template-rows: 1fr 1fr 1fr;
      grid-template-areas: "." "." "cover";

      &.left {
        grid-area: left;
      }

      &.right {
        grid-area: right;
      }

      & > .tape {
        @extend %border;
        @extend %animation;

        width: 58%;
        height: 2%;
        margin-top: auto;
        grid-area: cover;
        position: relative;
        border-bottom: unset;
        background: $primary;

        &.left {
          left: 0.05rem;
          margin-right: auto;
          border-left: unset;
          border-radius: 0 0.125rem 0 0;

          @include respond-to("sm") {
            border-radius: 0 0.25rem 0 0;
          }
        }

        &.right {
          right: 0.05rem;
          margin-left: auto;
          border-right: unset;
          border-radius: 0.125rem 0 0 0;

          @include respond-to("sm") {
            border-radius: 0.25rem 0 0 0;
          }
        }
      }
    }
  }

  &.top {
    @extend %border;
    @extend %animation;

    width: 100%;
    height: 100%;
    position: absolute;
    border-bottom: unset;
    z-index: z-index("top");
    animation-name: openMobile;
    background: $primary-gradient;
    border-radius: 1.25rem 1.25rem 0.25rem 0.25rem;
    box-shadow: inset -0.0156rem 0.0313rem 0 0.0313rem $light, inset 0.0313rem 0 0 0.0078rem $shadow-light;

    display: grid;
    grid-area: top;
    grid-template-rows: 1fr;
    grid-template-columns: 1fr 5fr 1fr;
    grid-template-areas: "left middle right";

    @include respond-to("sm") {
      animation-name: openDesktop;
      border-radius: 2.5rem 2.5rem 0.5rem 0.5rem;
      box-shadow: inset -0.0313rem 0.0625rem 0 0.0625rem $light, inset 0.0625rem 0 0 0.0156rem $shadow-light;
    }

    & > .speaker {
      overflow: hidden;

      display: grid;
      grid-area: left;
      grid-template-columns: 1fr;
      grid-template-rows: 1fr 1fr 1fr 0.8fr;
      grid-template-areas: "." "holes" "slider" "cover";

      &.left {
        grid-area: left;
      }

      &.right {
        grid-area: right;
      }

      & > .holes {
        margin: auto;

        display: grid;
        grid-area: holes;
        grid-template-rows: 0.5rem 0.5rem 0.5rem;
        grid-template-columns: 0.5rem 0.5rem 0.5rem;
        grid-template-areas: ". top ." "left center right" ". bottom .";

        @include respond-to("sm") {
          grid-template-rows: 1rem 1rem 1rem;
          grid-template-columns: 1rem 1rem 1rem;
        }

        & > .hole {
          @extend %border;

          width: 50%;
          height: 50%;
          margin: auto;
          border-radius: 50%;
          background: $shadow-dark;
          box-shadow: inset 0.0156rem -0.0156rem 0 0.0156rem $shadow-light;

          @include respond-to("sm") {
            box-shadow: inset 0.0313rem -0.0313rem 0 0.0313rem $shadow-light;
          }

          &.top {
            grid-area: top;
          }

          &.left {
            grid-area: left;
          }

          &.center {
            grid-area: center;
          }

          &.right {
            grid-area: right;
          }

          &.bottom {
            grid-area: bottom;
          }
        }
      }

      & > .slider {
        @extend %border;

        width: 10%;
        height: 80%;
        overflow: hidden;
        margin-top: auto;
        position: relative;
        border-radius: 0.125rem;
        box-shadow: inset 0.0156rem -0.0313rem $shadow-light;

        display: grid;
        grid-area: slider;
        grid-template-columns: 1fr;
        grid-template-rows: 0.5fr 1fr 1fr;
        grid-template-areas: "piece" "." ".";

        @include respond-to("sm") {
          border-radius: 0.25rem;
          box-shadow: inset 0.0313rem -0.0625rem $shadow-light;
        }

        &.left {
          right: 0.0938rem;
          margin-right: auto;

          @include respond-to("sm") {
            right: 0.1875rem;
          }
        }

        &.right {
          left: 0.0938rem;
          margin-left: auto;

          @include respond-to("sm") {
            left: 0.1875rem;
          }
        }

        & > .piece {
          @extend %border;

          height: 0.75rem;
          top: -0.0625rem;
          grid-area: piece;
          right: 0.0625rem;
          width: 0.2813rem;
          position: relative;
          border-radius: 0.125rem;
          background: $secondary;

          @include respond-to("sm") {
            height: 1.5rem;
            top: -0.125rem;
            right: 0.125rem;
            width: 0.5625rem;
            border-radius: 0.25rem;
          }

          &::before {
            content: "";
            width: 100%;
            height: 50%;
            position: absolute;
            border-bottom: 0.0313rem solid $border-color;

            @include respond-to("sm") {
              border-width: 0.0625rem;
            }
          }
        }
      }

      & > .tape {
        @extend %border;
        @extend %animation;

        height: 2%;
        width: 58%;
        grid-area: cover;
        margin-top: auto;
        position: relative;
        border-bottom: unset;
        background: $background;
        animation-name: changeCoverColor;

        &.left {
          left: 0.05rem;
          margin-right: auto;
          border-left: unset;
          border-radius: 0 0.125rem 0 0;

          @include respond-to("sm") {
            border-radius: 0 0.25rem 0 0;
          }
        }

        &.right {
          right: 0.05rem;
          margin-left: auto;
          border-right: unset;
          border-radius: 0.125rem 0 0 0;

          @include respond-to("sm") {
            border-radius: 0.25rem 0 0 0;
          }
        }
      }
    }

    & > .screen {
      @extend %animation;

      border-bottom: unset;
      animation-name: screenVisibility;

      display: grid;
      grid-area: middle;
      grid-template-columns: 1fr;
      grid-template-rows: 0.15fr 1fr;
      grid-template-areas: "top" "screen";

      & > .lcd {
        @extend %border;

        top: 0.0625rem;
        position: relative;
        background: $shadow-light;
        border-radius: 0.25rem;
        box-shadow: inset 0 0 0 0.0313rem $shadow-light;
        padding: 0.25rem 0.25rem 0.25rem 0.25rem;

        display: grid;
        grid-area: screen;
        grid-template-rows: 1fr;
        grid-template-columns: 1fr;
        grid-template-areas: "display";

        @include respond-to("sm") {
          top: 0.125rem;
          border-radius: 0.5rem;
          padding: 0.5rem 0.5rem 0.5rem 0.5rem;
          box-shadow: inset 0 0 0 0.0625rem $shadow-light;
        }

        & > .display {
          @extend %display;
        }
      }

      & > .header {
        display: grid;
        grid-area: top;
        grid-template-rows: auto;
        grid-template-columns: 1fr 1fr 1fr;
        grid-template-areas: "left sensors right";

        & > .sensors {
          margin: auto;
          left: 0.5rem;
          position: relative;

          display: grid;
          grid-area: sensors;
          grid-template-rows: 0.5fr;
          grid-template-columns: 1fr 1fr;
          grid-template-areas: "camera infrared";

          @include respond-to("sm") {
            left: 0.75rem;
          }

          & > .camera {
            @extend %camera;

            grid-area: camera;
          }

          & > .infrared {
            margin: auto;
            width: 0.5rem;
            height: 0.5rem;
            border-radius: 50%;
            background: linear-gradient(45deg, lighten($black, 10%) 0%, $black 100%);

            grid-area: infrared;

            @include respond-to("sm") {
              width: 0.75rem;
              height: 0.75rem;
            }
          }
        }

        & > .protector {
          @extend %border;

          margin: auto;
          width: 0.5rem;
          height: 0.5rem;
          border-radius: 50%;
          background: $secondary;

          box-shadow: inset -0.0313rem 0.0313rem 0 $light;

          @include respond-to("sm") {
            width: 1rem;
            height: 1rem;
            box-shadow: inset -0.0625rem 0.0625rem 0 $light;
          }

          &.left {
            grid-area: left;
          }

          &.right {
            grid-area: right;
          }
        }
      }
    }
  }
}
