@import "../assets/settings/color";
@import "../assets/tools/responsiveness";
@import "../assets/settings/animation";

%border {
  border: solid;
  border-width: 1px;
  border-color: $border-color;

  @include respond-to("sm") {
    border-width: 2px;
  }
}

%display {
  width: 100%;
  height: 100%;
  margin: auto;
  grid-area: display;
  border-radius: 0.125rem;

  background: linear-gradient(
    120deg,
    rgba(0, 0, 0, 1) 0%,
    rgba(17, 17, 17, 1) 53%,
    rgba(31, 31, 31, 1) 87%,
    rgba(33, 33, 33, 1) 100%
  );

  @include respond-to("sm") {
    border-radius: 0.25rem;
  }
}

%animation {
  animation-delay: $animation-delay;
  animation-duration: $animation-time;
  animation-direction: $animation-direction;
  animation-iteration-count: $animation-count;
}

.container,
.cover {
  width: 100%;
  position: relative;
}

.container {
  margin: auto;
  display: grid;

  height: 21rem;
  width: 19.5rem;

  perspective: 7500px;

  grid-template-rows: 0.96fr 0.1fr 1fr;
  grid-template-columns: auto;
  grid-template-areas: "top" "fold" "bottom";

  @include respond-to("sm") {
    height: 42rem;
    width: 39rem;
  }

  & > .cover {
    @extend %border;

    height: 100%;
    display: grid;

    & > .screen {
      @extend %animation;

      display: grid;
      grid-area: middle;

      border-bottom: unset;
      grid-template-rows: 0.15fr 1fr;
      grid-template-columns: 1fr;
      grid-template-areas: "top" "screen";

      animation-name: screenVisibility;

      & > .header {
        display: grid;
        grid-area: top;

        grid-template-rows: auto;
        grid-template-columns: 1fr 1fr 1fr;
        grid-template-areas: "left sensors right";

        & > .sensors {
          margin: auto;
          left: 0.5rem;
          display: grid;
          grid-area: sensors;
          position: relative;

          grid-template-rows: 0.5fr;
          grid-template-columns: 1fr 1fr;
          grid-template-areas: "camera infrared";

          @include respond-to("sm") {
            left: 0.75rem;
          }

          & > .camera {
            grid-area: camera;

            margin: auto;
            width: 1rem;
            height: 1rem;
            display: grid;

            border-radius: 50%;
            background: linear-gradient(
              45deg,
              rgba(0, 0, 0, 1) 0%,
              rgba(17, 17, 17, 1) 63%,
              rgba(31, 31, 31, 1) 87%,
              rgba(33, 33, 33, 1) 100%
            );

            grid-template-rows: 1fr;
            grid-template-columns: 1fr;
            grid-template-areas: "lens";

            @include respond-to("sm") {
              width: 1.5rem;
              height: 1.5rem;
            }

            & > .lens {
              background: lighten($black, 30%);

              width: 60%;
              height: 60%;
              margin: auto;
              display: grid;
              grid-area: lens;
              border-radius: 50%;

              grid-template-rows: 1fr;
              grid-template-columns: 1fr;
              grid-template-areas: "shutter";

              & > .shutter {
                background: linear-gradient(45deg, lighten($black, 30%) 0%, $black 100%);

                width: 50%;
                height: 50%;
                margin: auto;
                grid-area: shutter;
                border-radius: 50%;
              }
            }
          }

          & > .infrared {
            grid-area: infrared;

            margin: auto;
            width: 0.5rem;
            height: 0.5rem;

            border-radius: 50%;

            background: linear-gradient(45deg, lighten($black, 10%) 0%, $black 100%);

            @include respond-to("sm") {
              width: 0.75rem;
              height: 0.75rem;
            }
          }
        }

        & > .protector {
          @extend %border;

          margin: auto;
          border-radius: 50%;

          width: 0.5rem;
          height: 0.5rem;

          box-shadow: inset -0.5px 0.5px 0 $light;

          @include respond-to("sm") {
            width: 1rem;
            height: 1rem;
            box-shadow: inset -1px 1px 0 $light;
          }

          &.left {
            grid-area: left;
          }

          &.right {
            grid-area: right;
          }
        }
      }

      & > .screen {
        @extend %border;

        top: 1px;
        display: grid;
        position: relative;
        grid-area: screen;
        border-radius: 0.25rem;

        grid-template-areas: "display";
        grid-template-rows: 1fr;
        grid-template-columns: 1fr;

        padding: 0.25rem 0.25rem 0.25rem 0.25rem;

        background: $shadow;

        box-shadow: inset 0 0 0 0.5px $shadow;

        @include respond-to("sm") {
          top: 2px;
          border-radius: 0.5rem;
          padding: 0.5rem 0.5rem 0.5rem 0.5rem;
          box-shadow: inset 0 0 0 1px $shadow;
        }

        & > .display {
          @extend %display;
        }
      }
    }

    &.back {
      @extend %animation;

      grid-area: top;
      border-bottom: unset;
      border-radius: 1.25rem 1.25rem 0.25rem 0.25rem;

      grid-template-rows: 1fr;
      grid-template-columns: 1fr 5fr 1fr;
      grid-template-areas: "left center right";

      z-index: 1;
      transform-style: preserve-3d;
      background: $primary-gradient;

      animation-name: closeBackCoverMobile;

      @include respond-to("sm") {
        animation-name: closeBackCoverDesktop;
        border-radius: 2.5rem 2.5rem 0.5rem 0.5rem;
      }

      & > .center {
        @extend %animation;

        display: grid;
        grid-area: center;
        grid-template-rows: 1fr 1fr 1fr;
        grid-template-columns: 1fr;
        grid-template-areas: "sensors" "." ".";

        animation-name: backSensorsVisibility;

        & > .sensors {
          width: 100%;
          display: grid;
          grid-area: sensors;
          position: relative;

          grid-template-rows: 0.4fr;
          grid-template-columns: 0.5fr 1fr 1fr 0.5fr;
          grid-template-areas: ". left right .";

          & > .camera {
            margin: auto;
            width: 1rem;
            height: 1rem;
            display: grid;

            border-radius: 50%;
            background: linear-gradient(
              45deg,
              rgba(0, 0, 0, 1) 0%,
              rgba(17, 17, 17, 1) 63%,
              rgba(31, 31, 31, 1) 87%,
              rgba(33, 33, 33, 1) 100%
            );

            grid-template-rows: 1fr;
            grid-template-columns: 1fr;
            grid-template-areas: "lens";

            @include respond-to("sm") {
              width: 1.5rem;
              height: 1.5rem;
            }

            & > .lens {
              background: lighten($black, 30%);

              width: 60%;
              height: 60%;
              margin: auto;
              display: grid;
              grid-area: lens;
              border-radius: 50%;

              grid-template-rows: 1fr;
              grid-template-columns: 1fr;
              grid-template-areas: "shutter";

              & > .shutter {
                background: linear-gradient(45deg, lighten($black, 30%) 0%, $black 100%);

                width: 50%;
                height: 50%;
                margin: auto;
                grid-area: shutter;
                border-radius: 50%;
              }
            }

            &.left {
              grid-area: left;
            }

            &.right {
              grid-area: right;
            }
          }
        }
      }

      & > .bottom {
        @extend %animation;

        width: 100%;
        height: 0.4rem;
        position: absolute;
        border-radius: 2.5px;
        background: $primary-gradient;
        transform: rotateX(90deg) translate3d(0px, 3.5px, -20px);

        @include respond-to("sm") {
          height: 0.8rem;
          border-radius: 5px;
          transform: rotateX(90deg) translate3d(0px, 7px, -40px);
        }
      }

      & > .section {
        display: grid;
        grid-area: left;

        grid-template-rows: 1fr 1fr 1fr;
        grid-template-columns: 1fr;
        grid-template-areas: "." "." "cover";

        &.left {
          grid-area: left;
        }

        &.right {
          grid-area: right;
        }

        & > .tape {
          @extend %border;
          @extend %animation;

          z-index: 0;
          width: 58%;
          height: 2%;
          margin-top: auto;
          grid-area: cover;
          position: relative;
          border-bottom: unset;
          background: $primary;
          animation-name: bottomCoverOpacity;

          &.left {
            left: 0.05rem;
            margin-right: auto;
            border-left: unset;
            border-radius: 0 0.125rem 0 0;

            @include respond-to("sm") {
              border-radius: 0 0.25rem 0 0;
            }
          }

          &.right {
            right: 0.05rem;
            margin-left: auto;
            border-right: unset;
            border-radius: 0.125rem 0 0 0;

            @include respond-to("sm") {
              border-radius: 0.25rem 0 0 0;
            }
          }
        }
      }
    }

    &.top {
      @extend %animation;

      grid-area: top;
      border-bottom: unset;
      border-radius: 1.25rem 1.25rem 0.25rem 0.25rem;

      z-index: 1;
      background: $primary-gradient;

      grid-template-rows: 1fr;
      grid-template-columns: 1fr 5fr 1fr;
      grid-template-areas: "left middle right";

      transform-style: preserve-3d;

      animation-name: closeCoverMobile;

      box-shadow: inset -0.25px 0.5px 0 0.5px $light, inset 0.5px 0 0 0.125px $shadow;

      @include respond-to("sm") {
        animation-name: closeCoverDesktop;
        border-radius: 2.5rem 2.5rem 0.5rem 0.5rem;
        box-shadow: inset -0.5px 1px 0 1px $light, inset 1px 0 0 0.25px $shadow;
      }

      & > .speaker {
        display: grid;
        grid-area: left;
        overflow: hidden;

        grid-template-rows: 1fr 1fr 1fr 0.8fr;
        grid-template-columns: 1fr;
        grid-template-areas: "." "holes" "slider" "cover";

        &.left {
          grid-area: left;
        }

        &.right {
          grid-area: right;
        }

        & > .holes {
          margin: auto;
          display: grid;
          grid-area: holes;

          grid-template-rows: 0.5rem 0.5rem 0.5rem;
          grid-template-columns: 0.5rem 0.5rem 0.5rem;
          grid-template-areas: ". top ." "left center right" ". bottom .";

          @include respond-to("sm") {
            grid-template-rows: 1rem 1rem 1rem;
            grid-template-columns: 1rem 1rem 1rem;
          }

          & > .hole {
            @extend %border;

            width: 50%;
            height: 50%;
            margin: auto;
            border-radius: 50%;
            background: $shadow;
            box-shadow: inset 0.25px -0.25px 0 0.25px $shadow;

            @include respond-to("sm") {
              box-shadow: inset 0.5px -0.5px 0 0.5px $shadow;
            }

            &.top {
              grid-area: top;
            }

            &.left {
              grid-area: left;
            }

            &.center {
              grid-area: center;
            }

            &.right {
              grid-area: right;
            }

            &.bottom {
              grid-area: bottom;
            }
          }
        }

        & > .slider {
          @extend %border;
          grid-area: slider;

          width: 10%;
          height: 80%;
          margin-top: auto;
          position: relative;

          display: grid;

          grid-template-columns: 1fr;
          grid-template-rows: 0.5fr 1fr 1fr;
          grid-template-areas: "piece" "." ".";
          border-radius: 2px;
          overflow: hidden;

          box-shadow: inset 0.25px -0.5px $shadow;

          @include respond-to("sm") {
            border-radius: 4px;
            box-shadow: inset 0.5px -1px $shadow;
          }

          &.left {
            right: 1.5px;
            margin-right: auto;

            @include respond-to("sm") {
              right: 3px;
            }
          }

          &.right {
            left: 1.5px;
            margin-left: auto;

            @include respond-to("sm") {
              left: 3px;
            }
          }

          & > .piece {
            @extend %border;
            top: -1px;
            right: 1px;
            width: 4.5px;
            height: 12px;
            grid-area: piece;
            border-radius: 2px;
            position: relative;

            @include respond-to("sm") {
              top: -2px;
              right: 2px;
              width: 9px;
              height: 24px;
              border-radius: 4px;
            }

            &::before {
              content: "";
              width: 100%;
              height: 50%;
              position: absolute;
              border-bottom: 0.5px solid $border-color;

              @include respond-to("sm") {
                border-width: 1px;
              }
            }
          }
        }

        & > .tape {
          @extend %border;
          @extend %animation;

          z-index: 0;
          width: 58%;
          height: 2%;
          margin-top: auto;
          grid-area: cover;
          position: relative;
          border-bottom: unset;
          background: $background;
          animation-name: changeCoverColor;

          &.left {
            left: 0.05rem;
            margin-right: auto;
            border-left: unset;
            border-radius: 0 0.125rem 0 0;

            @include respond-to("sm") {
              border-radius: 0 0.25rem 0 0;
            }
          }

          &.right {
            right: 0.05rem;
            margin-left: auto;
            border-right: unset;
            border-radius: 0.125rem 0 0 0;

            @include respond-to("sm") {
              border-radius: 0.25rem 0 0 0;
            }
          }
        }
      }
    }

    &.bottom {
      @extend %animation;

      z-index: -1;
      bottom: 0.375rem;
      grid-area: bottom;
      border-top: unset;
      grid-template-rows: 1fr;
      grid-template-columns: 1fr;
      grid-template-areas: "face";
      background: $primary-gradient;
      border-radius: 0 0 1.25rem 1.25rem;

      animation-name: bottomCoverOpacity;

      box-shadow: inset -0.25px 0.5px 0 0.5px $light, inset 0.5px 0 0 0.125px $shadow;

      @include respond-to("sm") {
        bottom: 0.75rem;
        border-radius:0 0 2.5rem 2.5rem;
        box-shadow: inset -0.5px 1px 0 1px $light, inset 1px 0 0 0.25px $shadow;
      }

      & > .face {

        display: grid;
        grid-area: face;
        margin-top: 0.35rem;
        grid-template-rows: auto;
        grid-template-columns: 1fr 3fr 1fr;
        grid-template-areas: "left middle right";
        border-radius: 0 0 1.25rem 1.25rem;

        @include respond-to("sm") {
          margin-top: 0.7rem;
          border-radius: 0 0 2.5rem 2.5rem;
        }

        & > .directional {
          display: grid;
          grid-area: left;

          grid-template-rows: 1fr 1fr;
          grid-template-columns: 1fr;
          grid-template-areas: "joystick" "dpad";

          & > .joystick {
            @extend %border;

            margin: auto;
            width: 3rem;
            height: 3rem;

            grid-area: joystick;
            display: grid;
            border-radius: 50%;

            grid-template-rows: 1fr;
            grid-template-columns: 1fr;
            grid-template-areas: "stick";

            box-shadow: inset -0.5px 0.25px 0 0.5px $shadow, -0.5px 0.25px $light;

            @include respond-to("sm") {
              width: 6rem;
              height: 6rem;
              box-shadow: inset -1px 0.5px 0 1px $shadow, -1px 0.5px $light;
            }

            & > .stick {
              @extend %border;
              width: 70%;
              height: 70%;
              margin: auto;
              border-radius: 50%;
              position: relative;
              box-shadow: inset 1px -1px 0 0 $shadow, inset 0 0 0 1px $light, -2px 1px 0 0 $shadow;
              background: linear-gradient(225deg, rgb(131, 131, 131) 0%, rgba(214, 214, 214, 1) 100%);

              @include respond-to("sm") {
                box-shadow: inset 2px -2px 0 0 $shadow, inset 0 0 0 2px $light, -4px 2px 0 0 $shadow;
              }
            }
          }

          & > .dpad {
            width: 2.5rem;
            height: 2.5rem;

            margin: 0 auto auto auto;
            display: grid;
            grid-area: dpad;

            grid-template-rows: 1fr 1fr 1fr;
            grid-template-columns: 1fr 1fr 1fr;
            grid-template-areas: ". top ." "left center right" ". bottom .";

            @include respond-to("sm") {
              width: 5rem;
              height: 5rem;
            }

            & > .pad {
              @extend %border;
              z-index: 0;
              margin: -0.5px;

              background: $secondary;

              @include respond-to("sm") {
                margin: -1px;
              }

              &.top {
                grid-area: top;
                border-bottom: unset;
                border-radius: 0.125rem 0.125rem 0 0;
                box-shadow: inset -0.5px 0.5px 0 0 $light, -2px 0 0 -1px $shadow;

                @include respond-to("sm") {
                  border-radius: 0.25rem 0.25rem 0 0;
                  box-shadow: inset -1px 1px 0 0 $light, -4px 0 0 -2px $shadow;
                }
              }

              &.left {
                grid-area: left;
                border-right: unset;
                box-shadow: -1px 1px 0 0 $shadow;
                border-radius: 0.125rem 0 0 0.125rem;
                @include respond-to("sm") {
                  box-shadow: -2px 2px 0 0 $shadow;
                  border-radius: 0.25rem 0 0 0.25rem;
                }
              }

              &.right {
                grid-area: right;
                border-left: unset;
                box-shadow: inset -0.5px 0.5px 0 0 $light;
                border-radius: 0 0.125rem 0.125rem 0;

                @include respond-to("sm") {
                  box-shadow: inset -1px 1px 0 0 $light;
                  border-radius: 0 0.25rem 0.25rem 0;
                }
              }

              &.bottom {
                grid-area: bottom;
                border-top: unset;
                border-radius: 0 0 0.125rem 0.125rem;
                box-shadow: inset -0.5px 0 0 $light, -1px 0 0 $shadow;

                @include respond-to("sm") {
                  border-radius: 0 0 0.25rem 0.25rem;
                  box-shadow: inset -1px 0 0 $light, -2px 0 0 $shadow;
                }
              }

              &.center {
                z-index: 0;
                grid-area: center;
                border: unset;
              }
            }
          }
        }

        & > .touchpad {
          @extend %border;

          top: 1px;
          display: grid;
          grid-area: middle;
          position: relative;

          grid-template-rows: 1fr 0.15fr;
          grid-template-columns: 1fr;
          grid-template-areas: "display" "home";

          padding: 0.25rem 0.25rem 0 0.25rem;
          border-radius: 0.25rem 0.25rem 0.75rem 0.75rem;

          box-shadow: -0.5px 0.25px 0 0 $shadow, inset -0.5px -0.25px 0 0 $light, inset 0.5px -0.25px 0 0 $shadow;

          @include respond-to("sm") {
            top: 2px;
            padding: 0.5rem 0.5rem 0 0.5rem;
            border-radius: 0.5rem 0.5rem 1.5rem 1.5rem;
            box-shadow: -1px 0.5px 0 0 $shadow, inset -1px -0.5px 0 0 $light, inset 0.5px -0.5px 0 0 $shadow;
          }

          .display {
            @extend %display;
          }

          & > .home {
            @extend %border;

            width: 1rem;
            margin: auto;
            height: 0.5rem;
            grid-area: home;
            border-radius: 0.25rem;

            background: $secondary;

            @include respond-to("sm") {
              width: 2rem;
              height: 1rem;
              border-radius: 0.5rem;
            }
          }
        }

        & > .buttons {
          grid-area: right;
          display: grid;

          grid-template-rows: 1fr 0.7fr 0.05fr;
          grid-template-columns: 1fr;
          grid-template-areas: "action" "usability" "leds";

          & > .action {
            width: 3rem;
            height: 4rem;
            margin: auto;
            display: grid;
            grid-area: action;

            @include respond-to("sm") {
              width: 6rem;
              height: 8rem;
            }

            grid-template-rows: 1fr 1fr 1fr 1fr;
            grid-template-columns: 1fr 1fr 1fr;
            grid-template-areas: "c . ." ". x ." "y . a" ". b .";

            & > .button {
              @extend %border;

              display: grid;
              grid-area: action;
              border-radius: 50%;
              grid-template-rows: 1fr;
              grid-template-columns: 1fr;
              grid-template-areas: 'text';
              box-shadow: inset -0.5px 0.5px 0 $light, -1px 0.5px 0 $shadow;

              & > span {
                margin: auto;
                color: $white;
                line-height: 0;
                grid-area: text;
                position: relative;
                font-size: 0.5rem;

                @include respond-to("sm") {
                  font-size: 1rem;
                }
              }

              @include respond-to("sm") {
                box-shadow: inset -1px 1px 0 $light, -2px 1px 0 $shadow;
              }

              &.c {
                width: 90%;
                height: 90%;
                grid-area: c;
                background: $secondary;
              }

              &.x {
                grid-area: x;
                background: $button-x;
              }

              &.y {
                grid-area: y;
                background: $button-y;
              }

              &.a {
                grid-area: a;
                background: $button-a;
              }

              &.b {
                grid-area: b;
                background: $button-b;
              }
            }
          }

          & > .usability {
            display: grid;
            grid-area: usability;

            grid-template-rows: 0.5fr 0.5fr;
            grid-template-columns: 0.4fr;
            grid-template-areas: "start" "select";

            & > .button {
              width: 0.75rem;
              height: 0.75rem;
              margin: auto;

              background: $secondary;

              box-shadow: inset -0.5px 0.5px 0 $light, -1px 0.5px 0 $shadow;

              @include respond-to("sm") {
                box-shadow: inset -1px 1px 0 $light, -2px 1px 0 $shadow;
              }

              @include respond-to("sm") {
                width: 1.5rem;
                height: 1.5rem;
              }

              &.start {
                @extend %border;

                grid-area: start;
                border-radius: 50%;
              }

              &.select {
                margin: 0 auto auto auto;
                @extend %border;
                grid-area: select;
                border-radius: 50%;
              }
            }
          }

          & > .leds {
            right: 22.5px;
            bottom: -1px;
            display: grid;
            grid-area: leds;
            position: relative;
            grid-template-columns: 1fr 1fr 1fr 1fr;
            grid-template-areas: "microphone power charge wifi";

            @include respond-to("sm") {
              right: 45px;
              bottom: -2px;
            }

            & > .led {
              @extend %border;

              margin-left: 10px;
              background: $secondary;
              border-radius: 2px 2px 0 0;

              @include respond-to("sm") {
                margin-left: 20px;
                border-radius: 4px 4px 0 0;
              }

              &.microphone {
                right: 2.5px;
                position: relative;
                grid-area: microphone;

                @include respond-to("sm") {
                  right: 5px;
                }
              }

              &.power {
                grid-area: power;
              }

              &.charge {
                grid-area: charge;
              }

              &.wifi {
                grid-area: wifi;
              }
            }
          }
        }
      }
    }
  }
  & > .fold {
    @extend %animation;
    @extend %border;

    width: 100%;
    height: 1.125rem;
    position: absolute;
    border-radius: 0.5rem;

    display: grid;
    grid-area: fold;

    background: $primary-gradient;

    animation-name: foldOpacity;

    grid-template-rows: auto;
    grid-template-columns: 0.1fr 1fr 0.1fr;
    grid-template-areas: "left . right";

    box-shadow: inset -0.5px 0.5px 0 $light, inset 0.5px -0.5px 0 $shadow;

    @include respond-to("sm") {
      height: 2.25rem;
      border-radius: 1rem;
      box-shadow: inset -1px 1px 0 $light, inset 1px -1px 0 $shadow;
    }

    & > .side {
      @extend %border;

      border-top: unset;
      border-bottom: unset;

      &::before {
        @extend %border;

        content: "";
        top: -0.375rem;
        height: 0.25rem;
        width: 1.125rem;
        position: absolute;
        background: $secondary;
        border-radius: 0.125rem 0.125rem 0 0;
        box-shadow: inset -0.25px 0.25px 0 $light, inset 0.25px -0.25px 0 $shadow;

        @include respond-to("sm") {
          top: -0.75rem;
          height: 0.5rem;
          width: 2.25rem;
          border-radius: 0.25rem 0.25rem 0 0;
          box-shadow: inset -0.5px 0.5px 0 $light, inset 0.5px -0.5px 0 $shadow;
        }
      }

      &.left {
        grid-area: left;
        border-left: unset;

        &::before {
          left: 2rem;

          @include respond-to("sm") {
            left: 4rem;
          }
        }
      }

      &.right {
        display: grid;
        grid-area: right;
        border-right: unset;

        grid-template-rows: 1fr;
        grid-template-columns: 1fr;
        grid-template-areas: "notification";

        & > .notification {
          @extend %border;

          margin: auto;
          width: 0.25rem;
          height: 0.25rem;
          border-radius: 35%;
          grid-area: notification;

          background: $secondary;

          @include respond-to("sm") {
            width: 0.5rem;
            height: 0.5rem;
          }
        }

        &::before {
          right: 2rem;

          @include respond-to("sm") {
            right: 4rem;
          }
        }
      }
    }
  }
}
